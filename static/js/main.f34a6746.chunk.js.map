{"version":3,"sources":["Header.js","MainFeaturedPost.js","FeaturedPost.js","Sidebar.js","Footer.js","blog-post.1.md","blog-post.2.md","blog-post.3.md","Main.js","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","theme","toolbar","borderBottom","palette","divider","toolbarTitle","flex","toolbarSecondary","justifyContent","overflowX","toolbarLink","padding","spacing","flexShrink","Header","props","classes","sections","title","Fragment","Toolbar","className","Button","size","Typography","component","variant","color","align","noWrap","IconButton","map","section","Link","href","url","mainFeaturedPost","position","backgroundColor","grey","common","white","marginBottom","backgroundImage","backgroundSize","backgroundRepeat","backgroundPosition","overlay","top","bottom","right","left","mainFeaturedPostContent","breakpoints","up","paddingRight","MainFeaturedPost","post","Paper","style","image","display","src","alt","imageText","Grid","container","item","md","gutterBottom","paragraph","description","linkText","card","cardDetails","cardMedia","width","FeaturedPost","xs","CardActionArea","Card","CardContent","date","Hidden","xsDown","CardMedia","imageTitle","sidebarAboutBox","sidebarSection","marginTop","Copyright","Date","getFullYear","footer","background","paper","Footer","Container","maxWidth","mainGrid","imgText","featuredPosts","GitHubIcon","TwitterIcon","FacebookIcon","Blog","CssBaseline","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.f34a6746.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport SearchIcon from '@material-ui/icons/Search';\nimport Typography from '@material-ui/core/Typography';\nimport Link from '@material-ui/core/Link';\n\nconst useStyles = makeStyles((theme) => ({\n    toolbar: {\n        borderBottom: `1px solid ${theme.palette.divider}`,\n    },\n    toolbarTitle: {\n        flex: 1,\n    },\n    toolbarSecondary: {\n        justifyContent: 'space-between',\n        overflowX: 'auto',\n    },\n    toolbarLink: {\n        padding: theme.spacing(1),\n        flexShrink: 0,\n    },\n}));\n\nexport default function Header(props) {\n    const classes = useStyles();\n    const { sections, title } = props;\n\n    return (\n        <React.Fragment>\n            <Toolbar className={classes.toolbar}>\n                <Button size=\"small\">Subscribe</Button>\n                <Typography\n                    component=\"h2\"\n                    variant=\"h5\"\n                    color=\"inherit\"\n                    align=\"center\"\n                    noWrap\n                    className={classes.toolbarTitle}\n                >\n                    {title}\n                </Typography>\n                <IconButton>\n                    <SearchIcon />\n                </IconButton>\n                <Button variant=\"outlined\" size=\"small\">\n                    Sign up\n                </Button>\n            </Toolbar>\n            <Toolbar component=\"nav\" variant=\"dense\" className={classes.toolbarSecondary}>\n                {sections.map((section) => (\n                    <Link\n                        color=\"inherit\"\n                        noWrap\n                        key={section.title}\n                        variant=\"body2\"\n                        href={section.url}\n                        className={classes.toolbarLink}\n                    >\n                        {section.title}\n                    </Link>\n                ))}\n            </Toolbar>\n        </React.Fragment>\n    );\n}\n\nHeader.propTypes = {\n    sections: PropTypes.array,\n    title: PropTypes.string,\n};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport Link from '@material-ui/core/Link';\n\nconst useStyles = makeStyles((theme) => ({\n    mainFeaturedPost: {\n        position: 'relative',\n        backgroundColor: theme.palette.grey[800],\n        color: theme.palette.common.white,\n        marginBottom: theme.spacing(4),\n        // backgroundImage: 'url(https://source.unsplash.com/random)',\n        backgroundImage: 'url(https://media.istockphoto.com/photos/moving-forward-picture-id514210781)',\n        backgroundSize: 'cover',\n        backgroundRepeat: 'no-repeat',\n        backgroundPosition: 'center',\n    },\n    overlay: {\n        position: 'absolute',\n        top: 0,\n        bottom: 0,\n        right: 0,\n        left: 0,\n        backgroundColor: 'rgba(0,0,0,.3)',\n    },\n    mainFeaturedPostContent: {\n        position: 'relative',\n        padding: theme.spacing(3),\n        [theme.breakpoints.up('md')]: {\n            padding: theme.spacing(6),\n            paddingRight: 0,\n        },\n    },\n}));\n\nexport default function MainFeaturedPost(props) {\n    const classes = useStyles();\n    const { post } = props;\n\n    return (\n        <Paper className={classes.mainFeaturedPost} style={{ backgroundImage: `url(${post.image})` }}>\n            {/* Increase the priority of the hero background image */}\n            {<img style={{ display: 'none' }} src={post.image} alt={post.imageText} />}\n            <div className={classes.overlay} />\n            <Grid container>\n                <Grid item md={6}>\n                    <div className={classes.mainFeaturedPostContent}>\n                        <Typography component=\"h1\" variant=\"h3\" color=\"inherit\" gutterBottom>\n                            {post.title}\n                        </Typography>\n                        <Typography variant=\"h5\" color=\"inherit\" paragraph>\n                            {post.description}\n                        </Typography>\n                        <Link variant=\"subtitle1\" href=\"#\">\n                            {post.linkText}\n                        </Link>\n                    </div>\n                </Grid>\n            </Grid>\n        </Paper>\n    );\n}\n\nMainFeaturedPost.propTypes = {\n    post: PropTypes.object,\n};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Hidden from '@material-ui/core/Hidden';\n\nconst useStyles = makeStyles({\n    card: {\n        display: 'flex',\n    },\n    cardDetails: {\n        flex: 1,\n    },\n    cardMedia: {\n        width: 160,\n    },\n});\n\nexport default function FeaturedPost(props) {\n    const classes = useStyles();\n    const { post } = props;\n\n    return (\n        <Grid item xs={12} md={6}>\n            <CardActionArea component=\"a\" href=\"#\">\n                <Card className={classes.card}>\n                    <div className={classes.cardDetails}>\n                        <CardContent>\n                            <Typography component=\"h2\" variant=\"h5\">\n                                {post.title}\n                            </Typography>\n                            <Typography variant=\"subtitle1\" color=\"textSecondary\">\n                                {post.date}\n                            </Typography>\n                            <Typography variant=\"subtitle1\" paragraph>\n                                {post.description}\n                            </Typography>\n                            <Typography variant=\"subtitle1\" color=\"primary\">\n                                Continue reading...\n                            </Typography>\n                        </CardContent>\n                    </div>\n                    <Hidden xsDown>\n                        <CardMedia className={classes.cardMedia} image={post.image} title={post.imageTitle} />\n                    </Hidden>\n                </Card>\n            </CardActionArea>\n        </Grid>\n    );\n}\n\nFeaturedPost.propTypes = {\n    post: PropTypes.object,\n};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport Link from '@material-ui/core/Link';\n\nconst useStyles = makeStyles((theme) => ({\n  sidebarAboutBox: {\n    padding: theme.spacing(2),\n    backgroundColor: theme.palette.grey[200],\n  },\n  sidebarSection: {\n    marginTop: theme.spacing(3),\n  },\n}));\n\nexport default function Sidebar(props) {\n  const classes = useStyles();\n  const { archives, description, social, title } = props;\n\n  return (\n    <Grid item xs={12} md={4}>\n      <Paper elevation={0} className={classes.sidebarAboutBox}>\n        <Typography variant=\"h6\" gutterBottom>\n          {title}\n        </Typography>\n        <Typography>{description}</Typography>\n      </Paper>\n      <Typography variant=\"h6\" gutterBottom className={classes.sidebarSection}>\n        Archives\n      </Typography>\n      {archives.map((archive) => (\n        <Link display=\"block\" variant=\"body1\" href={archive.url} key={archive.title}>\n          {archive.title}\n        </Link>\n      ))}\n      <Typography variant=\"h6\" gutterBottom className={classes.sidebarSection}>\n        Social\n      </Typography>\n      {social.map((network) => (\n        <Link display=\"block\" variant=\"body1\" href=\"#\" key={network}>\n          <Grid container direction=\"row\" spacing={1} alignItems=\"center\">\n            <Grid item>\n              <network.icon />\n            </Grid>\n            <Grid item>{network.name}</Grid>\n          </Grid>\n        </Link>\n      ))}\n    </Grid>\n  );\n}\n\nSidebar.propTypes = {\n  archives: PropTypes.array,\n  description: PropTypes.string,\n  social: PropTypes.array,\n  title: PropTypes.string,\n};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport Typography from '@material-ui/core/Typography';\nimport Link from '@material-ui/core/Link';\n\nfunction Copyright() {\n    return (\n        <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n            {'Copyright © '}\n            <Link color=\"inherit\" href=\"https://material-ui.com/\">\n                Your Website\n            </Link>{' '}\n            {new Date().getFullYear()}\n            {'.'}\n        </Typography>\n    );\n}\n\nconst useStyles = makeStyles((theme) => ({\n    footer: {\n        backgroundColor: theme.palette.background.paper,\n        // marginTop: theme.spacing(8),\n        padding: theme.spacing(6, 0),\n    },\n}));\n\nexport default function Footer(props) {\n    const classes = useStyles();\n    const { description, title } = props;\n\n    return (\n        <footer className={classes.footer}>\n            <Container maxWidth=\"lg\">\n                <Typography variant=\"h6\" align=\"center\" gutterBottom>\n                    {title}\n                </Typography>\n                <Typography variant=\"subtitle1\" align=\"center\" color=\"textSecondary\" component=\"p\">\n                    {description}\n                </Typography>\n                <Copyright />\n            </Container>\n        </footer>\n    );\n}\n\nFooter.propTypes = {\n    description: PropTypes.string,\n    title: PropTypes.string,\n};","export default __webpack_public_path__ + \"static/media/blog-post.1.435994f4.md\";","export default __webpack_public_path__ + \"static/media/blog-post.2.c6cbfe5d.md\";","export default __webpack_public_path__ + \"static/media/blog-post.3.32efcbb9.md\";","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Grid from '@material-ui/core/Grid';\nimport Container from '@material-ui/core/Container';\nimport GitHubIcon from '@material-ui/icons/GitHub';\nimport FacebookIcon from '@material-ui/icons/Facebook';\nimport TwitterIcon from '@material-ui/icons/Twitter';\nimport Header from './Header';\nimport MainFeaturedPost from './MainFeaturedPost';\nimport FeaturedPost from './FeaturedPost';\nimport Main from './Main';\nimport Sidebar from './Sidebar';\nimport Footer from './Footer';\nimport post1 from './blog-post.1.md';\nimport post2 from './blog-post.2.md';\nimport post3 from './blog-post.3.md';\n\nconst useStyles = makeStyles((theme) => ({\n    mainGrid: {\n        marginTop: theme.spacing(3),\n    },\n}));\n\nconst sections = [\n    { title: 'Technology', url: '#' },\n    { title: 'Design', url: '#' },\n    { title: 'Culture', url: '#' },\n    { title: 'Business', url: '#' },\n    { title: 'Politics', url: '#' },\n    { title: 'Opinion', url: '#' },\n    { title: 'Science', url: '#' },\n    { title: 'Health', url: '#' },\n    { title: 'Style', url: '#' },\n    { title: 'Travel', url: '#' },\n];\n\nconst mainFeaturedPost = {\n    title: 'Title of a longer featured blog post',\n    description:\n        \"Multiple lines of text that form the lede, informing new readers quickly and efficiently about what's most interesting in this post's contents.\",\n    // image: 'https://source.unsplash.com/random',\n    image: 'https://images.unsplash.com/photo-1630155923002-17db0f219f1f?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=3289&q=80',\n    imgText: 'main image description',\n    linkText: 'Continue reading…',\n};\n\nconst featuredPosts = [\n    {\n        title: 'Featured post',\n        date: 'Nov 12',\n        description:\n            'This is a wider card with supporting text below as a natural lead-in to additional content.',\n        image: 'https://images.unsplash.com/photo-1559581958-df379578606a?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=3347&q=80',\n        imageText: 'Image Text',\n    },\n    {\n        title: 'Post title',\n        date: 'Nov 11',\n        description:\n            'This is a wider card with supporting text below as a natural lead-in to additional content.',\n        image: 'https://images.unsplash.com/photo-1611974789855-9c2a0a7236a3?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=3300&q=80',\n        imageText: 'Image Text',\n    },\n];\n\nconst posts = [post1, post2, post3];\n\nconst sidebar = {\n    title: 'About',\n    description:\n        'Etiam porta sem malesuada magna mollis euismod. Cras mattis consectetur purus sit amet fermentum. Aenean lacinia bibendum nulla sed consectetur.',\n    archives: [\n        { title: 'March 2020', url: '#' },\n        { title: 'February 2020', url: '#' },\n        { title: 'January 2020', url: '#' },\n        { title: 'November 1999', url: '#' },\n        { title: 'October 1999', url: '#' },\n        { title: 'September 1999', url: '#' },\n        { title: 'August 1999', url: '#' },\n        { title: 'July 1999', url: '#' },\n        { title: 'June 1999', url: '#' },\n        { title: 'May 1999', url: '#' },\n        { title: 'April 1999', url: '#' },\n    ],\n    social: [\n        { name: 'GitHub', icon: GitHubIcon },\n        { name: 'Twitter', icon: TwitterIcon },\n        { name: 'Facebook', icon: FacebookIcon },\n    ],\n};\n\nexport default function Blog() {\n    const classes = useStyles();\n\n    return (\n        <React.Fragment>\n            <CssBaseline />\n            <Container maxWidth=\"lg\">\n                <Header title=\"Blog\" sections={sections} />\n                <main>\n                    <MainFeaturedPost post={mainFeaturedPost} />\n                    <Grid container spacing={4}>\n                        {featuredPosts.map((post) => (\n                            <FeaturedPost key={post.title} post={post} />\n                        ))}\n                    </Grid>\n                    {/* <Grid container spacing={5} className={classes.mainGrid}>\n                        <Main title=\"From the firehose\" posts={posts} />\n                        <Sidebar\n                            title={sidebar.title}\n                            description={sidebar.description}\n                            archives={sidebar.archives}\n                            social={sidebar.social}\n                        />\n                    </Grid> */}\n                </main>\n            </Container>\n            <Footer title=\"Footer\" description=\"Something here to give the footer a purpose!\" />\n        </React.Fragment>\n    );\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n// import App from './App';\nimport Main from './Main';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<Main />, document.getElementById('root'));\n// ReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}